services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: bitcorp_postgres
    environment:
      POSTGRES_DB: bitcorp_erp
      POSTGRES_USER: bitcorp
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - '5433:5432'
    networks:
      - bitcorp_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U bitcorp']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: bitcorp_redis
    ports:
      - '6379:6379'
    networks:
      - bitcorp_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bitcorp_backend
    environment:
      - DATABASE_URL=postgresql://bitcorp:password@db:5432/bitcorp_erp
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-super-secret-key-change-in-production-64-chars-min!@#$%^&*()
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      - ENVIRONMENT=development
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bitcorp_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000/health']
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bitcorp_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_APP_NAME=Bitcorp ERP
      - NODE_ENV=development
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    networks:
      - bitcorp_network
    command: npm run dev

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: bitcorp_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@bitcorp.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - '5050:80'
    depends_on:
      - db
    networks:
      - bitcorp_network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:
  backend_node_modules:
  frontend_node_modules:

networks:
  bitcorp_network:
    driver: bridge
